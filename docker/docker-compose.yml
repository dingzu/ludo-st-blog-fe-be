version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: ludost-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ludost-blog
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ludost-network

  # Redis缓存
  redis:
    image: redis:7.2-alpine
    container_name: ludost-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ludost-network

  # 后端服务
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: ludost-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/ludost-blog?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    volumes:
      - uploads_data:/app/uploads
    networks:
      - ludost-network

  # 前端服务
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: ludost-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ludost-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: ludost-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ludost-network

volumes:
  mongodb_data:
  redis_data:
  uploads_data:

networks:
  ludost-network:
    driver: bridge
